{
  "titles": [
    "Class Dash",
    "Pong",
    "Ray Tracer",
    "Personal Website",
    "Connect N",
    "Binary Search Tree",
    "Deque Stack Queue",
    "Linked List"
  ],
  "shortInfos": [
    "This game was made as a result of a team effort of 4 students during a 2-month ...",
    "This is a C++ version of the classic video game pong. It employs the SDL2 ...",
    "This is a program for rendering basic 3D shapes using ray tracing in C++. The ...",
    "This website introduces me as a developer and shows off the cool things I've ...",
    "Connect N is a GUI game I made using the Java Swing API. It functions similarly ...",
    "This is a balanced binary search tree I coded from scratch using Python. Using ...",
    "I implemented a deque from scratch with both the functionality of a stack and ...",
    "This repository contains the Python code for a linked list implementation, which ..."
  ],
  "longInfos": [
    "This game was made as a result of a team effort of 4 students during a 2-month agile development period for the Game Design course at William & Mary in Spring 2025. In it, you play as a William & Mary senior during finals week who must rush across campus in order to get to your finals on time and graduate. Written in C++, this project was foundational in building my teamwork and version control skills, as well as sharpening my understanding of agile development in a deadline-filled environment.",
    "This is a C++ version of the classic video game pong. It employs the SDL2 library for rendering geometry, text, and audio. Starting from rudimentary skeleton files, I created this game within 2 weeks as an assignment for my Game Design course in Spring 2025. During development, I learned the basics of SDL2 for 2D graphics rendering, as well as other fundamental concepts in game design like game clocks, gameplay loops, and difficulty curves.",
    "This is a program for rendering basic 3D shapes using ray tracing in C++. The program reads in a text file continaing formatted information about the color and position of the shapes and light source, and stores them in a linked list using C++ pointers. It then uses ray tracing to render each object in space and perform realistic lighting calculations based on the position of the light source. With this project, I learned the underlying algorithms behind basic ray tracing which are used to render everything from video games to spaceship models.",
    "This website introduces me as a developer and shows off the cool things I've made. Designed and implemented completely from scratch, I created my portfolio website in under 3 months, having never written a line of HTML in my life. With the design, development, and deployment skills I taught myself from this project, I can build clean and appealing web front-ends with full mobile compatability. The REST API is also used to dynamically fetch all my public github projects and display info about them on the website, which is automatically updated every day using GitHub workflow actions and scripts. My portfolio is live at https://sambrothers0.github.io",
    "Connect N is a GUI game I made using the Java Swing API. It functions similarly to Connect 4, but with variable board sizes, and was comprehensively planned using UML diagrams before starting. During development, I followed the Model-View-Controller artitecture in order to build a complete, functional, and bug-free desktop app with a leaderboard, settings, info screen and other features. This project demonstrated the complexity of even a simple desktop app, and the organizaitonal skills necessary to execute it.",
    "This is a balanced binary search tree I coded from scratch using Python. Using this structure, numbers can be sorted and stored in mathematically optimal time, since the tree automatically detects lopsidedness and rebalances itself to maintain the quickest performance. During the implementation, I learned about heaps and trees as a means of organizing data, and discovered the mechanism behind one of computer science's most important inventions.",
    "I implemented a deque from scratch with both the functionality of a stack and queue. Thorough understanding of these data structures are fundamental to any programmer, so I coded a deque, which acts as a double ended stack and can be pushed or popped from either end. Using Python, I made two different programs with identical functionality, but different structures: one array-based, and one with a custom linked list I made from scratch. Upon completion, I learned about the benefits and drawbacks of each implementation.",
    "This repository contains the Python code for a linked list implementation, which I developed as part of my Data Structures class in the Fall of 2022. Users can append and remove elements from the list using simple commands in the terminal."
  ],
  "dates": [
    "May 2025",
    "Mar 2025",
    "Nov 2024",
    "Aug 2024",
    "Apr 2024",
    "Nov 2022",
    "Nov 2022",
    "Oct 2022"
  ],
  "urls": [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "thumbnails": [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ]
}